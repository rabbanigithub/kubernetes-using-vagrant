---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for Docker stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install Docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    notify:
      - docker-status

  - name: Copy cri-dockerd installation script
    copy:
      src: cri-dockerd.sh
      dest: /root/cri-dockerd.sh
      mode: 0777

  - name: Install cri-dockerd
    shell: ./cri-dockerd.sh
    args:
      chdir: /root/
      executable: /bin/bash

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Settings to load overlay & br_netfilter module during boot
    shell: printf "overlay\nbr_netfilter\n" > /etc/modules-load.d/k8s.conf
    
  - name: Load overlay & br_netfilter module
    shell: |
      modprobe overlay
      modprobe br_netfilter
      exit 0
    
  - name: Settings to load bridge module during boot
    shell: printf "net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\n" > /etc/sysctl.d/k8s.conf

  - name: Load bridge module
    shell: sysctl --system

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Configure node IP
    shell: echo "KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}" > /etc/default/kubelet

  - name: Restart kubelet Service
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
      
  - name: Copy the join command to server location
    copy:
      src: join-command
      dest: /tmp/join-command.sh
      mode: 0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh
    
  handlers:
    - name: docker-status
      service: name=docker state=started
